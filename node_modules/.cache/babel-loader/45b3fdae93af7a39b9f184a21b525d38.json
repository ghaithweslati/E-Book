{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sief0\\\\Desktop\\\\2ING_2\\\\ReactJs\\\\projectsFinal\\\\E-Book\\\\src\\\\components\\\\BooksList\\\\BooksList.js\";\nimport Book from '../Book/Book';\nimport './BooksList.css';\nimport BookForm from \"../BookForm/BookForm\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { fetchBooks, searchBooks } from \"../../services/books.service\";\n\nfunction BooksList(props) {\n  const [books, setBooks] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [add, setAdd] = useState(true);\n  const current = JSON.parse(localStorage.getItem('current'));\n\n  const addBook = (image, categorie, titre, nbExemp, auteur) => {\n    setBooks(previousBooks => [{\n      isbn: books.length + 1,\n      image,\n      categorie,\n      titre,\n      etat: 'Disponible',\n      nbExemp,\n      auteur\n    }, ...previousBooks]);\n    fetchBooks().unshift({\n      isbn: fetchBooks().length + 1,\n      image,\n      categorie,\n      titre,\n      etat: 'Disponible',\n      nbExemp,\n      auteur\n    });\n    localStorage.setItem('books', JSON.stringify(fetchBooks()));\n  };\n\n  const memoizedCallback = useCallback(addBook, []);\n\n  const updateBook = (isbn, image, categorie, titre, etat, nbExemp, auteur) => {\n    const newBooks = books.map(book => book.isbn === isbn ? {\n      isbn,\n      image,\n      categorie,\n      titre,\n      etat,\n      nbExemp,\n      auteur\n    } : book);\n    setBooks(newBooks);\n    localStorage.setItem('books', JSON.stringify(newBooks));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!searchValue) {\n        let result = await fetchBooks();\n        setBooks(result);\n      } else {\n        const result = await searchBooks(searchValue);\n        setBooks(result);\n      }\n    };\n\n    fetchData();\n  }, [searchValue]);\n  return React.createElement(\"div\", {\n    className: \"listLivre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"List of Books\"), current.type == 'Admin' && React.createElement(\"h1\", {\n    onClick: e => setAdd(!add),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, add ? React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search By Title, Author...\",\n    name: \"search\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : React.createElement(BookForm, {\n    addBook: memoizedCallback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, books.map((step, index) => React.createElement(Book, {\n    key: index,\n    isbn: step.isbn,\n    image: step.image,\n    categorie: step.categorie,\n    titre: step.titre,\n    etat: step.etat,\n    nbExemp: step.nbExemp,\n    auteur: step.auteur,\n    updateBook: updateBook,\n    getBook: props.getBook,\n    borrowed: props.borrowed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, step.description))));\n}\n\nexport default BooksList;","map":{"version":3,"sources":["C:/Users/sief0/Desktop/2ING_2/ReactJs/projectsFinal/E-Book/src/components/BooksList/BooksList.js"],"names":["Book","BookForm","React","useState","useCallback","useEffect","fetchBooks","searchBooks","BooksList","props","books","setBooks","searchValue","setSearchValue","add","setAdd","current","JSON","parse","localStorage","getItem","addBook","image","categorie","titre","nbExemp","auteur","previousBooks","isbn","length","etat","unshift","setItem","stringify","memoizedCallback","updateBook","newBooks","map","book","fetchData","result","type","e","target","value","step","index","getBook","borrowed","description"],"mappings":"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","sourcesContent":["\r\nimport Book from '../Book/Book';\r\nimport './BooksList.css';\r\nimport BookForm from \"../BookForm/BookForm\"\r\nimport React, { useState, useCallback, useEffect } from \"react\"\r\nimport { fetchBooks,searchBooks } from \"../../services/books.service\"\r\n\r\nfunction BooksList(props) {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [add, setAdd] = useState(true);\r\n\r\n  const current=JSON.parse(localStorage.getItem('current'));\r\n\r\n  const addBook=(image, categorie,titre,nbExemp,auteur)=>{\r\n    setBooks(previousBooks => [\r\n      { isbn: books.length + 1, image, categorie,titre,etat:'Disponible',nbExemp,auteur },...previousBooks\r\n    ] \r\n    )\r\n    fetchBooks().unshift({ isbn: fetchBooks().length + 1, image, categorie,titre,etat:'Disponible',nbExemp,auteur })\r\n    localStorage.setItem('books',JSON.stringify(fetchBooks()))\r\n  }\r\n\r\n  const memoizedCallback = useCallback(addBook, [])\r\n\r\n  const updateBook = (isbn, image, categorie,titre,etat,nbExemp,auteur) => {\r\n      const newBooks = books.map(book => book.isbn === isbn?({isbn,image, categorie,titre,etat,nbExemp,auteur}): book);\r\n    setBooks(newBooks);\r\n    localStorage.setItem('books',JSON.stringify(newBooks));\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!searchValue) \r\n      {\r\n        let result = await fetchBooks();\r\n        setBooks(result)\r\n      }\r\n       else \r\n       {\r\n        const result = await searchBooks(searchValue)\r\n          setBooks(result)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [searchValue])\r\n  \r\n  return (\r\n      <div className=\"listLivre\">\r\n        <header>\r\n        <h1>List of Books</h1>\r\n        {current.type=='Admin' && <h1 onClick={e => setAdd(!add)}>+</h1>}\r\n        {        \r\n         <nav>\r\n           {add\r\n                  ?<input type=\"text\" placeholder=\"Search By Title, Author...\"\r\n                  name=\"search\"\r\n                  value={searchValue}\r\n                  onChange={e => setSearchValue(e.target.value)}\r\n                   />\r\n                 :<BookForm addBook={memoizedCallback} />\r\n           }\r\n        </nav>\r\n        }\r\n        </header>\r\n        <hr/>\r\n        <section>\r\n        {books.map((step ,index) => (\r\n            <Book  key={index} isbn={step.isbn} image={step.image} categorie={step.categorie} titre={step.titre}  etat={step.etat} nbExemp={step.nbExemp} auteur={step.auteur} updateBook={updateBook} getBook={props.getBook} borrowed={props.borrowed}  >\r\n                        {step.description} \r\n            </Book>\r\n        ))}\r\n        </section>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default BooksList;"]},"metadata":{},"sourceType":"module"}