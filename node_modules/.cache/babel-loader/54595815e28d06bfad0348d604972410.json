{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sief0\\\\Desktop\\\\2ING_2\\\\ReactJs\\\\projectsFinal\\\\E-Book\\\\src\\\\components\\\\BooksList\\\\BooksList.js\";\nimport Book from \"../Book/Book\";\nimport \"./BooksList.css\";\nimport BookForm from \"../BookForm/BookForm\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { fetchBooks, searchBooks } from \"../../services/books.service\";\n\nfunction BooksList(props) {\n  const [books, setBooks] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [add, setAdd] = useState(true);\n  var current = {\n    id: 0,\n    type: \"Admin\"\n  };\n  if (localStorage.getItem(\"current\")) current = JSON.parse(localStorage.getItem(\"current\"));\n\n  const addBook = (image, categorie, titre, nbExemp, auteur) => {\n    setBooks(previousBooks => [{\n      isbn: books.length + 1,\n      image,\n      categorie,\n      titre,\n      etat: \"Disponible\",\n      nbExemp,\n      auteur\n    }, ...previousBooks]);\n    fetchBooks().unshift({\n      isbn: fetchBooks().length + 1,\n      image,\n      categorie,\n      titre,\n      etat: \"Disponible\",\n      nbExemp,\n      auteur\n    });\n    localStorage.setItem(\"books\", JSON.stringify(fetchBooks()));\n  };\n\n  const memoizedCallback = useCallback(addBook, []);\n\n  const updateBook = (isbn, image, categorie, titre, etat, nbExemp, auteur) => {\n    const newBooks = books.map(book => book.isbn === isbn ? {\n      isbn,\n      image,\n      categorie,\n      titre,\n      etat,\n      nbExemp,\n      auteur\n    } : book);\n    setBooks(newBooks);\n    localStorage.setItem(\"books\", JSON.stringify(newBooks));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!searchValue) {\n        let result = await fetchBooks();\n        setBooks(result);\n      } else {\n        const result = await searchBooks(searchValue);\n        setBooks(result);\n      }\n    };\n\n    fetchData();\n  }, [searchValue]);\n  return React.createElement(\"div\", {\n    className: \"listLivre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"List of Books\"), current.type === \"Admin\" && React.createElement(\"h1\", {\n    onClick: e => setAdd(!add),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, add ? React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search By Title, Author...\",\n    name: \"search\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : React.createElement(BookForm, {\n    addBook: memoizedCallback,\n    maxnbExempValue: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, books.map((step, index) => React.createElement(Book, {\n    key: index,\n    isbn: step.isbn,\n    image: step.image,\n    categorie: step.categorie,\n    titre: step.titre,\n    etat: step.etat,\n    nbExemp: step.nbExemp,\n    auteur: step.auteur,\n    updateBook: updateBook,\n    getBook: props.getBook,\n    borrowed: props.borrowed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, step.description))));\n}\n\nexport default BooksList;","map":{"version":3,"sources":["C:/Users/sief0/Desktop/2ING_2/ReactJs/projectsFinal/E-Book/src/components/BooksList/BooksList.js"],"names":["Book","BookForm","React","useState","useCallback","useEffect","fetchBooks","searchBooks","BooksList","props","books","setBooks","searchValue","setSearchValue","add","setAdd","current","id","type","localStorage","getItem","JSON","parse","addBook","image","categorie","titre","nbExemp","auteur","previousBooks","isbn","length","etat","unshift","setItem","stringify","memoizedCallback","updateBook","newBooks","map","book","fetchData","result","e","target","value","step","index","getBook","borrowed","description"],"mappings":"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","sourcesContent":["import Book from \"../Book/Book\";\r\nimport \"./BooksList.css\";\r\nimport BookForm from \"../BookForm/BookForm\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { fetchBooks, searchBooks } from \"../../services/books.service\";\r\n\r\nfunction BooksList(props) {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [add, setAdd] = useState(true);\r\n\r\n  var current = { id: 0, type: \"Admin\" };\r\n  if (localStorage.getItem(\"current\"))\r\n    current = JSON.parse(localStorage.getItem(\"current\"));\r\n\r\n  const addBook = (image, categorie, titre, nbExemp, auteur) => {\r\n    setBooks((previousBooks) => [\r\n      {\r\n        isbn: books.length + 1,\r\n        image,\r\n        categorie,\r\n        titre,\r\n        etat: \"Disponible\",\r\n        nbExemp,\r\n        auteur,\r\n      },\r\n      ...previousBooks,\r\n    ]);\r\n    fetchBooks().unshift({\r\n      isbn: fetchBooks().length + 1,\r\n      image,\r\n      categorie,\r\n      titre,\r\n      etat: \"Disponible\",\r\n      nbExemp,\r\n      auteur,\r\n    });\r\n    localStorage.setItem(\"books\", JSON.stringify(fetchBooks()));\r\n  };\r\n\r\n  const memoizedCallback = useCallback(addBook, []);\r\n\r\n  const updateBook = (isbn, image, categorie, titre, etat, nbExemp, auteur) => {\r\n    const newBooks = books.map((book) =>\r\n      book.isbn === isbn\r\n        ? { isbn, image, categorie, titre, etat, nbExemp, auteur }\r\n        : book\r\n    );\r\n    setBooks(newBooks);\r\n    localStorage.setItem(\"books\", JSON.stringify(newBooks));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!searchValue) {\r\n        let result = await fetchBooks();\r\n        setBooks(result);\r\n      } else {\r\n        const result = await searchBooks(searchValue);\r\n        setBooks(result);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [searchValue]);\r\n\r\n  return (\r\n    <div className=\"listLivre\">\r\n      <header>\r\n        <h1>List of Books</h1>\r\n        {current.type === \"Admin\" && <h1 onClick={(e) => setAdd(!add)}>+</h1>}\r\n        {\r\n          <nav>\r\n            {add ? (\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search By Title, Author...\"\r\n                name=\"search\"\r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n            ) : (\r\n              <BookForm addBook={memoizedCallback} maxnbExempValue={100} />\r\n            )}\r\n          </nav>\r\n        }\r\n      </header>\r\n      <hr />\r\n      <section>\r\n        {books.map((step, index) => (\r\n          <Book\r\n            key={index}\r\n            isbn={step.isbn}\r\n            image={step.image}\r\n            categorie={step.categorie}\r\n            titre={step.titre}\r\n            etat={step.etat}\r\n            nbExemp={step.nbExemp}\r\n            auteur={step.auteur}\r\n            updateBook={updateBook}\r\n            getBook={props.getBook}\r\n            borrowed={props.borrowed}\r\n          >\r\n            {step.description}\r\n          </Book>\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BooksList;\r\n"]},"metadata":{},"sourceType":"module"}